package com.patrykandpatryk.liftapp.core.ui.theme

import androidx.compose.material3.ColorScheme
import androidx.compose.material3.MaterialTheme.colorScheme
import androidx.compose.runtime.Composable
import androidx.compose.ui.graphics.Color

// These colors were generated by https://material-foundation.github.io/material-theme-builder.
object Colors {

    const val IllustrationAlpha: Float = 0.44f

    object Light {
        val primary = Color(color = 0xffc00011)
        val onPrimary = Color(color = 0xffffffff)
        val primaryContainer = Color(color = 0xffffdad4)
        val onPrimaryContainer = Color(color = 0xff410002)
        val secondary = Color(color = 0xffc10004)
        val onSecondary = Color(color = 0xffffffff)
        val secondaryContainer = Color(color = 0xffffdad3)
        val onSecondaryContainer = Color(color = 0xff410000)
        val tertiary = Color(color = 0xffc10004)
        val onTertiary = Color(color = 0xffffffff)
        val tertiaryContainer = Color(color = 0xffffdad3)
        val onTertiaryContainer = Color(color = 0xff410000)
        val error = Color(color = 0xff880000)
        val errorContainer = Color(color = 0xffaa0000)
        val onError = Color(color = 0xffffdddd)
        val onErrorContainer = Color(color = 0xffffbbbb)
        val background = Color(color = 0xfffdfcff)
        val onBackground = Color(color = 0xff1a1c1e)
        val surface = Color(color = 0xfffdfcff)
        val onSurface = Color(color = 0xff1a1c1e)
        val surfaceVariant = Color(color = 0xffe7e0ec)
        val onSurfaceVariant = Color(color = 0xff49454f)
        val outline = Color(color = 0xff79747e)
        val inverseOnSurface = Color(color = 0xfff0f0f3)
        val inverseSurface = Color(color = 0xff2f3033)
        val inversePrimary = Color(color = 0xffffb3a9)
    }

    object Dark {
        val primary = Color(color = 0xffffb3a9)
        val onPrimary = Color(color = 0xff690005)
        val primaryContainer = Color(color = 0xff93000a)
        val onPrimaryContainer = Color(color = 0xffffdad4)
        val secondary = Color(color = 0xffffb4a8)
        val onSecondary = Color(color = 0xff680001)
        val secondaryContainer = Color(color = 0xff940002)
        val onSecondaryContainer = Color(color = 0xffffdad3)
        val tertiary = Color(color = 0xffffb4a8)
        val onTertiary = Color(color = 0xff680001)
        val tertiaryContainer = Color(color = 0xff940002)
        val onTertiaryContainer = Color(color = 0xffffdad3)
        val error = Color(color = 0xffff4444)
        val errorContainer = Color(color = 0xffff2222)
        val onError = Color(color = 0xff660000)
        val onErrorContainer = Color(color = 0xff880000)
        val background = Color(color = 0xff1a1c1e)
        val onBackground = Color(color = 0xffe2e2e6)
        val surface = Color(color = 0xff1a1c1e)
        val onSurface = Color(color = 0xffe2e2e6)
        val surfaceVariant = Color(color = 0xff49454f)
        val onSurfaceVariant = Color(color = 0xffcac4D0)
        val outline = Color(color = 0xff938f99)
        val inverseOnSurface = Color(color = 0xff1a1c1e)
        val inverseSurface = Color(color = 0xffe2e2e6)
        val inversePrimary = Color(color = 0xffc00011)
    }
}

@Composable
fun getHighlightedColorScheme(): ColorScheme =
    colorScheme.run {
        copy(
            outlineVariant = primary,
            background = primaryContainer,
            onBackground = onPrimaryContainer,
            surface = primaryContainer,
            onSurface = onPrimaryContainer,
            onSurfaceVariant = onPrimaryContainer,
        )
    }
